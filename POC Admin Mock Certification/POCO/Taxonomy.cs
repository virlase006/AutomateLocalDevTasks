// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using POCO;
//
//    var taxonomy = Taxonomy.FromJson(jsonString);

using System;
using System.Collections.Generic;
using System.Globalization;
using Mock.Implementation;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace POCO
{
    public partial class Taxonomy
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("modified_on", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ModifiedOn { get; set; }

        [JsonProperty("created_on", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? CreatedOn { get; set; }

        [JsonProperty("display_template", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTemplate { get; set; }

        [JsonProperty("is_taxonomy_item_definition", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsTaxonomyItemDefinition { get; set; }

        [JsonProperty("is_path_enabled_definition", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsPathEnabledDefinition { get; set; }

        [JsonProperty("is_manual_sorting_allowed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsManualSortingAllowed { get; set; }

        [JsonProperty("is_system_owned", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSystemOwned { get; set; }

        [JsonProperty("labels", NullValueHandling = NullValueHandling.Ignore)]
        public Labels Labels { get; set; }

        [JsonProperty("member_groups", NullValueHandling = NullValueHandling.Ignore)]
        public List<MemberGroup> MemberGroups { get; set; }

        [JsonProperty("entities", NullValueHandling = NullValueHandling.Ignore)]
        public Entities Entities { get; set; }

        [JsonProperty("related_paths", NullValueHandling = NullValueHandling.Ignore)]
        public Entities RelatedPaths { get; set; }

        [JsonProperty("modified_by", NullValueHandling = NullValueHandling.Ignore)]
        public CreatedBy ModifiedBy { get; set; }

        [JsonProperty("created_by", NullValueHandling = NullValueHandling.Ignore)]
        public CreatedBy CreatedBy { get; set; }

        [JsonProperty("self", NullValueHandling = NullValueHandling.Ignore)]
        public CreatedBy Self { get; set; }
    }

    public partial class CreatedBy
    {
        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }
    }

    public partial class Entities
    {
        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public string Href { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("templated", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Templated { get; set; }
    }

    public partial class Labels
    {
        [JsonProperty("en-US", NullValueHandling = NullValueHandling.Ignore)]
        public string EnUs { get; set; }
    }

    public partial class MemberGroup
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("labels", NullValueHandling = NullValueHandling.Ignore)]
        public Labels Labels { get; set; }

        [JsonProperty("members", NullValueHandling = NullValueHandling.Ignore)]
        public List<Member> Members { get; set; }

        [JsonProperty("is_system_owned", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSystemOwned { get; set; }

        [JsonProperty("is_conditional", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsConditional { get; set; }

        [JsonProperty("conditions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Conditions { get; set; }

        [JsonProperty("is_secured", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSecured { get; set; }
    }

    public partial class Member
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("content_type", NullValueHandling = NullValueHandling.Ignore)]
        public string ContentType { get; set; }

        [JsonProperty("validation_expression")]
        public object ValidationExpression { get; set; }

        [JsonProperty("is_indexed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsIndexed { get; set; }

        [JsonProperty("is_mandatory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [JsonProperty("is_multilanguage", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMultilanguage { get; set; }

        [JsonProperty("is_multivalue", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMultivalue { get; set; }

        [JsonProperty("is_unique", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsUnique { get; set; }

        [JsonProperty("boost", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Boost { get; set; }

        [JsonProperty("included_in_content", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IncludedInContent { get; set; }

        [JsonProperty("included_in_completion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IncludedInCompletion { get; set; }

        [JsonProperty("ignore_on_export", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IgnoreOnExport { get; set; }

        [JsonProperty("stored_in_graph", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StoredInGraph { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("labels", NullValueHandling = NullValueHandling.Ignore)]
        public Labels Labels { get; set; }

        [JsonProperty("helptext", NullValueHandling = NullValueHandling.Ignore)]
        public Helptext Helptext { get; set; }

        [JsonProperty("is_conditional", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsConditional { get; set; }

        [JsonProperty("conditions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Conditions { get; set; }

        [JsonProperty("can_trigger_conditional_members", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanTriggerConditionalMembers { get; set; }

        [JsonProperty("is_system_owned", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSystemOwned { get; set; }

        [JsonProperty("is_secured", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSecured { get; set; }

        [JsonProperty("can_write", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanWrite { get; set; }

        [JsonProperty("allow_updates", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllowUpdates { get; set; }

        [JsonProperty("role", NullValueHandling = NullValueHandling.Ignore)]
        public string Role { get; set; }

        [JsonProperty("cardinality", NullValueHandling = NullValueHandling.Ignore)]
        public string Cardinality { get; set; }

        [JsonProperty("associated_entitydefinition", NullValueHandling = NullValueHandling.Ignore)]
        public CreatedBy AssociatedEntitydefinition { get; set; }

        [JsonProperty("child_is_mandatory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ChildIsMandatory { get; set; }

        [JsonProperty("parent_is_mandatory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ParentIsMandatory { get; set; }

        [JsonProperty("inherits_security", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InheritsSecurity { get; set; }

        [JsonProperty("allow_navigation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllowNavigation { get; set; }

        [JsonProperty("is_nested", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsNested { get; set; }

        [JsonProperty("is_taxonomy_relation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsTaxonomyRelation { get; set; }

        [JsonProperty("is_taxonomy_hierarchy_relation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsTaxonomyHierarchyRelation { get; set; }

        [JsonProperty("content_is_copied", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContentIsCopied { get; set; }

        [JsonProperty("completion_is_copied", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CompletionIsCopied { get; set; }

        [JsonProperty("is_path_relation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsPathRelation { get; set; }

        [JsonProperty("is_path_hierarchy_relation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsPathHierarchyRelation { get; set; }

        [JsonProperty("path_hierarchy_score", NullValueHandling = NullValueHandling.Ignore)]
        public long? PathHierarchyScore { get; set; }

        [JsonProperty("is_rendition_relation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsRenditionRelation { get; set; }

        [JsonProperty("associated_labels", NullValueHandling = NullValueHandling.Ignore)]
        public Labels AssociatedLabels { get; set; }
    }

    public partial class Helptext
    {
    }

    public partial class Taxonomy
    {
        public static Taxonomy FromJson(string json) => JsonConvert.DeserializeObject<Taxonomy>(json, Converter.Settings);
    }

}
